import java.util.*;
import java.io.*;
import java.util.stream.*;
import java.util.Map;
import java.util.TreeMap;


class Main{
    
    public static void main(String[] args) throws IOException {
        BufferedReader bf= new BufferedReader(new InputStreamReader(System.in));
        int m = Integer.parseInt(bf.readLine().trim());
        for(int i=0;i<m;i++){
            int n = Integer.parseInt(bf.readLine().trim());
            int[] arr = Arrays.stream(bf.readLine().trim().split(" "))
            .mapToInt(Integer::parseInt).toArray();
            
             mean(arr,n);
        }
           
    }
    public static  void mean(int[]arr,int n){
           int ans[]=new int[3];


        //calculating the mean
        int sum=0;
        for(int i=0;i<arr.length;i++){
            sum+=arr[i];
        }
        ans[0]=sum;

        for(int i=0;i<n;i++){
            for(int j=0;j<n-i-1;j++){
                if(arr[j]<arr[j+1]){
                    int temp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
        }
        if(n%2!=0){
            int md=(n+1)/2;
            ans[1]=arr[md];
        }else{
            int mid= n/2;
            ans[1]=(arr[mid]+arr[mid-1])/2;
        }
        TreeMap<Integer,Integer>treeMap= new TreeMap<>();
        for(int i=0;i<arr.length;i++){
            if(treeMap.containsKey(arr[i])){
                treeMap.put(arr[i], treeMap.get(arr[i])+1);
            }else{
                treeMap.put(arr[i],1);
            }
        }
        int max=0;
        int val=0;
        for(Map.Entry<Integer,Integer>mp:treeMap.entrySet()){

            if(mp.getValue()>max){
                val=mp.getKey();
                max=mp.getValue();
            }
            
        }
        arr[2]=val;
        
        for(int i=0;i<ans.length;i++){
            System.out.print(ans[i]+" ");
        }
    
 }
}
