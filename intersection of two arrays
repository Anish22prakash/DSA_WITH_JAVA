     List<Integer> arr1=new ArrayList<>();
        arr1.add(7);
        arr1.add(1);
        arr1.add(5);
        arr1.add(2);
        arr1.add(3);
        arr1.add(6);


        List<Integer> arr2=new ArrayList<>();
        arr2.add(3);
        arr2.add(8);
        arr2.add(6);
        arr2.add(20);
        arr2.add(7);


       Map<Integer,Integer> mp= new HashMap<>();
       for(int i=0;i<arr1.size();i++){
           if(mp.containsKey(arr1.get(i))){
               mp.put(arr1.get(i),mp.get(arr1.get(i))+1);
           }
           else{
               mp.put(arr1.get(i),1);
           }
       }

        for(int i=0;i<arr2.size();i++){
            if(mp.containsKey(arr2.get(i))){
                mp.put(arr2.get(i),mp.get(arr2.get(i))+1);
            }
            else{
                mp.put(arr2.get(i),1);
            }
        }
        //calcaulaten union;
        System.out.print("union are: ");
        for(Map.Entry<Integer,Integer>map:mp.entrySet()){
            System.out.print(map.getKey()+" ");
        }
        System.out.println("\n");

        //calculate intersection
        System.out.print("intersection are: ");
        for(Map.Entry<Integer,Integer>map:mp.entrySet()){
            if (map.getValue()==2)
            System.out.print(map.getKey()+" ");
        }
